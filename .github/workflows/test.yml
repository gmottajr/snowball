name: Test snowball
on:
  label:
    types:
      - created
  push:
  pull_request:
jobs:
  build:
    runs-on: ${{ matrix.DIST == 'ce-specific' && 'ubuntu-20.04' || matrix.DIST }}
    strategy:
      matrix:
        include:
          - ARCH: 'x86_64'
            DIST: 'ubuntu-20.04'
            NAME: 'linux'
          #- ARCH: 'aarch64'
          #  DIST: 'ubuntu-20.04'
          #  NAME: 'linux'
          - ARCH: 'x86_64'
            DIST: 'ce-specific'
            NAME: 'ce-specific'
          - ARCH: 'arm64'
            DIST: 'macos-13'
            NAME: 'darwin'
          - ARCH: 'x86_64' 
            DIST: 'macos-13'
            NAME: 'darwin'
          # - ARCH: 'arm64' # TODO
          #   DIST: 'macos-13'
          #   NAME: 'darwin'
    name: Build ${{ matrix.NAME }} (${{ matrix.ARCH }}) [${{ matrix.DIST }}]
    env:
      DIST: ${{ matrix.DIST }}
      ARCH: ${{ matrix.ARCH }}
      NAME: ${{ matrix.NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU integration for Docker
        run: |
          if [[ "$OSTYPE" != "darwin"* ]]; then
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            sudo apt install cmake
            sudo apt install curl
          else 
            brew install llvm@16
            brew install gcc
            brew install zstd
            brew install curl
          fi

      - name: Build in Docker
        run: bash -ex build_scripts/release_build.sh
      - name: Install snowball
        run: |
          set -x
          mkdir -p ~/.snowball
          cp -r stdlib/ ~/.snowball/stdlib
          ls ~/.snowball
          ls ~/.snowball/stdlib/

      #- name: Execute tests
      #  run: |
      #    ./bin/Release/snowball test --no-progress